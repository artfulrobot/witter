{"version":3,"sources":["witter.js"],"names":["$","Drupal","behaviors","witter","attach","context","settings","witters","find","each","location","data","push","text","html","who","own","cid","window","nids","comments","filter","id","match","nid","closest","indexOf","username","vueAppElement","parent","tagName","insertAfter","vueCommentApp","Vue","el","newComment","mounted","methods","postComment","e","preventDefault","stopPropagation","$http","post","op","comment","then","response","body","alert","deleteComment","success","i","length","parseInt","splice","template","remove","setInterval","getJSON","map","c","jQuery"],"mappings":";;AAAA,CAAC,UAASA,CAAT,EAAW;;AAEVC,SAAOC,SAAP,CAAiBC,MAAjB,GAA0B;AACxBC,YAAQ,gBAAUC,OAAV,EAAmBC,QAAnB,EAA6B;;AAEnC;AACA,UAAIC,UAAU,EAAd;AACAP,QAAEK,OAAF,EAAWG,IAAX,CAAgB,yBAAhB,EAA2CC,IAA3C,CAAgD,YAAU;AACxD,YAAIC,WAAWV,EAAE,IAAF,EAAQW,IAAR,CAAa,iBAAb,CAAf;AACA,YAAI,EAAGD,YAAYH,OAAf,CAAJ,EAA6B;AAC3BA,kBAAQG,QAAR,IAAoB,EAApB;AACD;AACDH,gBAAQG,QAAR,EAAkBE,IAAlB,CAAuB;AACrBC,gBAAMb,EAAE,IAAF,EAAQQ,IAAR,CAAa,sCAAb,EAAqDM,IAArD,EADe;AAErBC,eAAKf,EAAE,IAAF,EAAQW,IAAR,CAAa,YAAb,CAFgB;AAGrBK,eAAKhB,EAAE,IAAF,EAAQW,IAAR,CAAa,YAAb,CAHgB;AAIrBM,eAAKjB,EAAE,IAAF,EAAQW,IAAR,CAAa,YAAb;AAJgB,SAAvB;AAMD,OAXD;AAYAO,aAAOX,OAAP,GAAiBA,OAAjB;;AAEA,UAAIY,OAAO,EAAX;;AAEA;AACA,UAAIC,WAAWpB,EAAEK,OAAF,EAAWG,IAAX,CAAgB,SAAhB,EAA2Ba,MAA3B,CAAkC,YAAW;AACxD,eAAQ,KAAKC,EAAL,CAAQC,KAAR,CAAc,uBAAd,CAAR;AACH,OAFc,EAEZd,IAFY,CAEP,YAAU;AAChB,YAAIC,WAAW,KAAKY,EAApB;;AAEA;AACA,YAAIE,MAAMxB,EAAE,IAAF,EAAQyB,OAAR,CAAgB,oBAAhB,EAAsCd,IAAtC,CAA2C,YAA3C,CAAV;AACA,YAAI,CAACa,GAAL,EAAU;AACR;AACD;AACD,YAAIL,KAAKO,OAAL,CAAaF,GAAb,KAAqB,CAAC,CAA1B,EAA6B;AAC3BL,eAAKP,IAAL,CAAUY,GAAV;AACD;AACD,YAAIG,WAAW3B,EAAE,IAAF,EAAQyB,OAAR,CAAgB,qBAAhB,EAAuCd,IAAvC,CAA4C,aAA5C,CAAf;;AAEA;AACA,YAAIiB,gBAAgB,IAApB;AACA,YAAI5B,EAAE,IAAF,EAAQ6B,MAAR,GAAiB,CAAjB,EAAoBC,OAApB,IAA+B,GAAnC,EAAwC;AACtCF,0BAAgB5B,EAAE,QAAF,EAAY+B,WAAZ,CAAwB/B,EAAE,IAAF,EAAQ6B,MAAR,EAAxB,EAA0C,CAA1C,CAAhB;AACD;;AAED,aAAKG,aAAL,GAAqB,IAAIC,GAAJ,CAAQ;AAC3BC,cAAIN,aADuB;AAE3BjB,gBAAM,gBAAW;AACf,mBAAO,EAAES,UAASb,QAAQG,QAAR,KAAqB,EAAhC,EAAoCyB,YAAW,EAA/C,EAAmDR,kBAAnD,EAAP;AACD,WAJ0B;AAK3BS,mBAAS,mBAAW,CACnB,CAN0B;AAO3BC,mBAAS;AACPC,yBAAa,qBAASC,CAAT,EAAY;AACvBA,gBAAEC,cAAF;AACAD,gBAAEE,eAAF;AACA,mBAAKC,KAAL,CAAWC,IAAX,CAAgB,aAAanB,GAA7B,EAAkC,EAACoB,IAAG,KAAJ,EAAWlC,kBAAX,EAAqBmC,SAAQ,KAAKV,UAAlC,EAAlC,EACGW,IADH,CAEI,UAASC,QAAT,EAAmB;AACjB,qBAAKZ,UAAL,GAAkB,EAAlB;AACA,qBAAKf,QAAL,CAAcR,IAAd,CAAmBmC,SAASC,IAA5B;AACD,eALL,EAMI,UAASD,QAAT,EAAmB;AAAEE,sBAAM,kKAAN;AAA4K,eANrM;AAQD,aAZM;AAaPC,2BAAe,uBAASjC,GAAT,EAAcsB,CAAd,EAAiB;AAC9BA,gBAAEC,cAAF;AACAD,gBAAEE,eAAF;AACA,mBAAKC,KAAL,CAAWC,IAAX,CAAgB,aAAanB,GAA7B,EAAkC,EAACoB,IAAI,QAAL,EAAe3B,QAAf,EAAlC,EACG6B,IADH,CAEI,UAASC,QAAT,EAAmB;AACjB,oBAAIA,SAASC,IAAT,CAAcG,OAAlB,EAA2B;AACzB;AACA,sBAAIC,IAAI,KAAKhC,QAAL,CAAciC,MAAd,GAAuB,CAA/B;AACA,yBAAOD,IAAE,CAAC,CAAV,EAAa;AACX,wBAAIE,SAAS,KAAKlC,QAAL,CAAcgC,CAAd,EAAiBnC,GAA1B,KAAkCqC,SAASrC,GAAT,CAAtC,EAAqD;AACnD,2BAAKG,QAAL,CAAcmC,MAAd,CAAqBH,CAArB,EAAuB,CAAvB;AACA;AACD;AACDA;AACD;AACF,iBAVD,MAWK;AACHH,wBAAM,0DAAN;AACD;AACF,eAjBL,EAkBI,UAASF,QAAT,EAAmB;AAACE,sBAAM,0BAAN;AAAmC,eAlB3D;AAoBD;AApCM,WAPkB;AA6C3BO;AA7C2B,SAAR,CAArB;AAkED,OAvFc,CAAf;AAwFA;AACA,UAAIpC,SAASiC,MAAb,EAAqB;AACnB;AACArD,UAAE,2BAAF,EAA+ByD,MAA/B;AACD;;AAED;AACAvC,aAAOwC,WAAP,CAAmB,YAAW;AAC5B1D,UAAE2D,OAAF,CAAU,aAAaxC,KAAK,CAAL,CAAb,GAAuB,YAAjC,EAA+C,UAAS4B,QAAT,EAAmB;AAChE,cAAIA,SAAS3B,QAAb,EAAuB;AACrBpB,cAAES,IAAF,CAAOsC,SAAS3B,QAAhB,EAA0B,UAAUV,QAAV,EAAoBU,QAApB,EAA8B;;AAEtDb,sBAAQG,QAAR,EAAkB6C,MAAlB,CAAyB,CAAzB,EAA4BhD,QAAQG,QAAR,EAAkB2C,MAA9C;AACArD,gBAAE4D,GAAF,CAAMxC,QAAN,EAAgB,UAASyC,CAAT,EAAY;AAAEtD,wBAAQG,QAAR,EAAkBE,IAAlB,CAAuBiD,CAAvB;AAA4B,eAA1D;AACA;;AAEA;;;;;;;;;;;;;;;;;AAkBA;AACD,aAzBD;AA0BD;AACF,SA7BD;AA8BD,OA/BD,EA+BG,IA/BH;AAgCD;AArJuB,GAA1B;AAyJD,CA3JD,EA2JGC,MA3JH","file":"witter.js","sourcesContent":["(function($){\n\n  Drupal.behaviors.witter = {\n    attach: function (context, settings) {\n\n      // Parse comments.\n      var witters = {};\n      $(context).find('*[data-witter-location]').each(function(){\n        var location = $(this).data('witter-location');\n        if (! (location in witters)) {\n          witters[location] = [];\n        }\n        witters[location].push({\n          text: $(this).find('.field-name-comment-body .field-item').html(),\n          who: $(this).data('witter-who'),\n          own: $(this).data('witter-own'),\n          cid: $(this).data('witter-cid')\n        });\n      });\n      window.witters = witters;\n\n      var nids = [];\n\n      // Find requests for comments.\n      var comments = $(context).find('a[name]').filter(function() {\n          return (this.id.match(/^chat-[a-zA-Z0-9_-]+$/));\n      }).each(function(){\n        var location = this.id;\n\n        // Find the node this belongs to.\n        var nid = $(this).closest('*[data-witter-nid]').data('witter-nid');\n        if (!nid) {\n          return;\n        }\n        if (nids.indexOf(nid) == -1) {\n          nids.push(nid);\n        }\n        var username = $(this).closest('*[data-witter-name]').data('witter-name');\n\n        // If this is inside a <p> let's escape that.\n        var vueAppElement = this;\n        if ($(this).parent()[0].tagName == 'P') {\n          vueAppElement = $('<div/>').insertAfter($(this).parent())[0];\n        }\n\n        this.vueCommentApp = new Vue({\n          el: vueAppElement,\n          data: function() {\n            return { comments:witters[location] || [], newComment:'', username };\n          },\n          mounted: function() {\n          },\n          methods: {\n            postComment: function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              this.$http.post('/witter/' + nid, {op:'add', location, comment:this.newComment})\n                .then(\n                  function(response) {\n                    this.newComment = '';\n                    this.comments.push(response.body);\n                  },\n                  function(response) { alert(\"Sorry, failed to save comment. Um, try again? If you think you could have been logged out, open another tab and log in again then try to save the comment again.\"); }\n                );\n            },\n            deleteComment: function(cid, e) {\n              e.preventDefault();\n              e.stopPropagation();\n              this.$http.post('/witter/' + nid, {op: 'delete', cid})\n                .then(\n                  function(response) {\n                    if (response.body.success) {\n                      // Find the index of this comment and remove it.\n                      var i = this.comments.length - 1;\n                      while (i>-1) {\n                        if (parseInt(this.comments[i].cid) == parseInt(cid)) {\n                          this.comments.splice(i,1);\n                          break;\n                        }\n                        i--;\n                      }\n                    }\n                    else {\n                      alert(\"Failed to delete comment - perhaps a permission problem.\");\n                    }\n                  },\n                  function(response) {alert(\"Failed to delete comment\");}\n                );\n            }\n          },\n          template: `<div class=\"witter\">\n              <table class=\"witter__comments\">\n              <transition-group name=\"witter-fade\" tag=\"tbody\">\n                <tr v-for=\"comment in comments\" :key=\"comment.cid\">\n                  <td class=\"witter__name\">{{comment.who}}</td>\n                  <td class=\"witter__text\" v-html=\"comment.text\"></td>\n                  <td class=\"witter__delete\"><a v-if=\"comment.own\" href @click=\"deleteComment(comment.cid, $event)\" title=\"Delete comment\">&times;</a></td>\n                </tr>\n              </transition-group>\n                <tr>\n                  <td class=\"witter__name\">{{ username }}</td>\n                  <td class=\"witter__text\"><form><div>\n                    <textarea v-model=\"newComment\" ></textarea>\n                    <button v-on:click=\"postComment\">Save Comment</button>\n                  </div></form></td>\n                </tr>\n              </tbody>\n              </table>\n            </div>`\n        });\n\n      });\n      // If we have any of our chat-NNN tags, remove comments UI.\n      if (comments.length) {\n        // Remove the comments UI.\n        $('#comments, li.comment-add').remove();\n      }\n\n      // still in attach()\n      window.setInterval(function() {\n        $.getJSON('/witter/' + nids[0] + '?op=reload', function(response) {\n          if (response.comments) {\n            $.each(response.comments, function (location, comments) {\n\n              witters[location].splice(0, witters[location].length);\n              $.map(comments, function(c) { witters[location].push(c); });\n              return;\n\n              /* lodash merge code. Turned out that the cid was being returned\n               * as a string not an int and this was causing Vue to not\n               * understand that it was the same comment.\n              // Remove comments that have been deleted.\n              for (var i = witters[location].length - 1;i--; i>-1) {\n                if (!_.find(comments, {cid: witters[location][i].cid})) {\n                  // comment has been deleted.\n                  console.log(\"removing \", JSON.stringify(witters[location][i]));\n                  witters[location].splice(i,1);\n                }\n              }\n              _.each(_.differenceBy(comments, witters[location], 'cid'), function(c) {\n                console.log(\"adding\", c);\n                witters[location].push(c);\n              });\n              */\n\n\n              //var x= Vue.set(witters, location, comments);\n            })\n          }\n        })\n      }, 5000);\n    }\n  };\n\n\n})(jQuery);\n"]}